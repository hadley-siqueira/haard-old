cmake_minimum_required(VERSION 2.8)
project(hdc)

include_directories(src/include)

set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -std=c++11 -g")

set(UTILS_SRC
    src/utils/utils.cc
)

set(LOG_SRC
    src/log/log.cc
    src/log/logger.cc
    src/log/log_messages.cc
    src/log/messages.cc
    src/log/info_messages.cc
    src/log/error_messages.cc
)

set(TOKEN_SRC
    src/token/token.cc
)

set(SCANNER_SRC
    src/scanner/scanner.cc
)

set(PARSER_SRC
    src/parser/parser.cc
)

set(AST_SRC
    src/ast/ast_node.cc
    src/ast/modules.cc
    src/ast/module.cc
    src/ast/annotation.cc
    src/ast/import.cc
    src/ast/compound_type_descriptor.cc
    src/ast/field.cc
    src/ast/class.cc
    src/ast/struct.cc
    src/ast/union.cc
    src/ast/enum.cc
    src/ast/template_header.cc
    src/ast/function.cc
    src/ast/variable.cc
    src/ast/type.cc
    src/ast/tuple_type.cc
    src/ast/indirection_type.cc
    src/ast/array_list_type.cc
    src/ast/function_type.cc
    src/ast/hash_type.cc
    src/ast/type_list.cc
    src/ast/named_type.cc
    src/ast/expression.cc
    src/ast/identifier.cc
    src/ast/literal.cc
    src/ast/expression_list.cc
    src/ast/new.cc
    src/ast/delete.cc
    src/ast/delete_array.cc
    src/ast/this.cc
    src/ast/function_expression.cc
    src/ast/statement.cc
    src/ast/while_statement.cc
    src/ast/for_statement.cc
    src/ast/branch_statement.cc
    src/ast/jump_statement.cc
    src/ast/compound_statement.cc
    src/ast/expression_statement.cc
    src/ast/var_decl.cc
    src/ast/cast.cc
    src/ast/string_builder.cc
    src/ast/binop.cc
    src/ast/binary_operator.cc
    src/ast/unary_operator.cc
    src/ast/assignment.cc
    src/ast/plus.cc
    src/ast/minus.cc
    src/ast/bitwise_and.cc
    src/ast/bitwise_and_assignment.cc
    src/ast/bitwise_not_assignment.cc
    src/ast/bitwise_or.cc
    src/ast/bitwise_or_assignment.cc
    src/ast/bitwise_xor.cc
    src/ast/bitwise_xor_assignment.cc
    src/ast/division.cc
    src/ast/division_assignment.cc
    src/ast/modulo_assignment.cc
    src/ast/equal.cc
    src/ast/greater_than.cc
    src/ast/greater_than_or_equal.cc
    src/ast/integer_division.cc
    src/ast/integer_division_assignment.cc
    src/ast/less_than.cc
    src/ast/less_than_or_equal.cc
    src/ast/logical_and.cc
    src/ast/logical_and_oper.cc
    src/ast/logical_or.cc
    src/ast/logical_or_oper.cc
    src/ast/minus_assignment.cc
    src/ast/modulo.cc
    src/ast/not_equal.cc
    src/ast/plus_assignment.cc
    src/ast/power.cc
    src/ast/shift_left_logical.cc
    src/ast/shift_left_logical_assignment.cc
    src/ast/shift_right_arithmetic.cc
    src/ast/shift_right_arithmetic_assignment.cc
    src/ast/shift_right_logical.cc
    src/ast/shift_right_logical_assignment.cc
    src/ast/special_assignment.cc
    src/ast/times.cc
    src/ast/times_assignment.cc
    src/ast/exclusive_range.cc
    src/ast/inclusive_range.cc
    src/ast/in.cc
    src/ast/not_in.cc
    src/ast/dot.cc
    src/ast/arrow.cc
    src/ast/index.cc
    src/ast/call.cc
    src/ast/address_of.cc
    src/ast/bitwise_not.cc
    src/ast/dereference.cc
    src/ast/logical_not.cc
    src/ast/logical_not_oper.cc
    src/ast/parenthesis.cc
    src/ast/pos_decrement.cc
    src/ast/pos_increment.cc
    src/ast/pre_decrement.cc
    src/ast/pre_increment.cc
    src/ast/sizeof.cc
    src/ast/unary_minus.cc
    src/ast/unary_plus.cc
    src/ast/array.cc
    src/ast/list.cc
    src/ast/hash.cc
    src/ast/tuple.cc
)

set(IR_SRC
    src/ir/ir.cc
    src/ir/ir_bin.cc
    src/ir/ir_unary.cc
    src/ir/ir_alloca.cc
    src/ir/ir_call.cc
    src/ir/ir_label.cc
    src/ir/ir_memory.cc
    src/ir/ir_branch.cc
    src/ir/ir_value.cc
    src/ir/ir_builder.cc
    src/ir/ir_context.cc
    src/ir/ir_function.cc
    src/ir/ir_module.cc
    src/ir/ir_modules.cc
)

set(PRINTER_SRC
    src/printer/printer.cc
    #src/printer/ir_printer.cc
)

set(DRIVER_SRC
    src/driver/driver.cc
)

set(SCOPE_SRC
    src/scope/symbol.cc
    src/scope/scope.cc
    #src/scope/old_scope_builder.cc
)

set(SEMANTIC_SRC
    src/semantic/scope_builder.cc
    src/semantic/scope_builder_context.cc
    src/semantic/modules_scope_builder.cc
    src/semantic/module_scope_builder.cc
    src/semantic/module_types_definer.cc
    src/semantic/module_methods_definer.cc
    src/semantic/module_functions_definer.cc
    src/semantic/module_functions_builder.cc
    src/semantic/function_declaration_scope_builder.cc
    src/semantic/function_scope_builder.cc
    src/semantic/type_descriptor_linker.cc
    src/semantic/statement_scope_builder.cc
    src/semantic/compound_statement_scope_builder.cc
    src/semantic/expression_statement_scope_builder.cc
    src/semantic/expression_scope_builder.cc
    src/semantic/identifier_scope_builder.cc
    src/semantic/assignment_scope_builder.cc
    src/semantic/equal_scope_builder.cc
    src/semantic/not_equal_scope_builder.cc
    src/semantic/plus_scope_builder.cc
    src/semantic/minus_scope_builder.cc
)

set(IRVM_SRC
    src/vm/irvm.cc
    src/vm/irvm_context.cc
)

set(SOURCES
    src/main.cc
    ${UTILS_SRC}
    ${LOG_SRC}
    ${TOKEN_SRC}
    ${SCANNER_SRC}
    ${PARSER_SRC}
    ${AST_SRC}
    #${IR_SRC}
    ${PRINTER_SRC}
    ${SCOPE_SRC}
    ${SEMANTIC_SRC}
    #${IRVM_SRC}
    ${DRIVER_SRC}
)

add_executable(${PROJECT_NAME} ${SOURCES})
