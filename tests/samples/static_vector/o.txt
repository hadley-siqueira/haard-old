%str0 = ""
%str1 = ", "
%str2 = "0b"
%str3 = "0x"

def main.main<void>():
    %0 = alloca v0_v, 1024, 4
    %5 = alloca v1_i, 4, 4
    call main.Vector#init<void>(%0)
    %1 = li 2
    call main.Vector#add<int>(%0, %1)
    %2 = li 3
    call main.Vector#add<int>(%0, %2)
    %3 = li 7
    call main.Vector#add<int>(%0, %3)
    call main.Vector#println<void>(%0)
    call main.Vector#pop<void>(%0)
    call main.Vector#println<void>(%0)
    %4 = li 0
    sw %5, %4
    
L0:
    %6 = lw %5
    %7 = li 10
    %8 = cmp.lt %6, %7
    bz %8, L1
    %9 = lw %5
    call main.Vector#add<int>(%0, %9)
    %10 = lw %5
    %11 = li 1
    %12 = add %10, %11
    sw %5, %12
    goto L0
    
L1:
    %13 = li 77
    call main.Vector#add_front<int>(%0, %13)
    call main.Vector#println<void>(%0)
    %14 = li 0
    %15 = li 100
    call main.Vector#replace<int, int>(%0, %14, %15)
    call main.Vector#println<void>(%0)
    call main.Vector#destroy<void>(%0)
    return

def main.Vector#init<void>(%0):
    %1 = alloca this, 8, 8
    sd %1, %0
    %2 = li 0
    %3 = ld %1
    %4 = li 0
    %5 = add %3, %4
    sw %5, %2
    return

def main.Vector#add<int>(%0, %1):
    %1 = alloca this, 8, 8
    %3 = alloca p0_n, 4, 4
    sd %1, %0
    sw %3, %2
    %4 = ld %1
    %5 = li 0
    %6 = add %4, %5
    %7 = lw %6
    %8 = li 255
    %9 = cmp.lt %7, %8
    bz %9, L0
    %10 = lw %3
    %11 = ld %1
    %12 = li 4
    %13 = add %11, %12
    %14 = ld %1
    %15 = li 0
    %16 = add %14, %15
    %17 = lw %16
    %18 = li 4
    %19 = mul %17, %18
    %20 = add %13, %19
    sw %20, %10
    %21 = ld %1
    %22 = li 0
    %23 = add %21, %22
    %24 = lw %23
    %25 = li 1
    %26 = add %24, %25
    sw %23, %26
    goto L1
    
L0:
    
L1:
    return

def main.Vector#at<int>(%0, %1):
    %1 = alloca this, 8, 8
    %3 = alloca p0_idx, 4, 4
    sd %1, %0
    sw %3, %2
    %4 = ld %1
    %5 = li 4
    %6 = add %4, %5
    %7 = lw %3
    %8 = li 4
    %9 = mul %7, %8
    %10 = add %6, %9
    %11 = lw %10
    return %11
    return

def main.Vector#print<void>(%0):
    %1 = alloca this, 8, 8
    %4 = alloca v0_i, 4, 4
    %20 = alloca v1_sbuilder0, 260, 4
    %35 = alloca v2_sbuilder1, 260, 4
    sd %1, %0
    %2 = li '{'
    call std.io.print<char>(%2)
    %3 = li 0
    sw %4, %3
    %5 = ld %1
    %6 = li 0
    %7 = add %5, %6
    %8 = lw %7
    %9 = li 0
    %10 = cmp.gt %8, %9
    bz %10, L0
    %11 = li 0
    sw %4, %11
    
L2:
    %12 = lw %4
    %13 = ld %1
    %14 = li 0
    %15 = add %13, %14
    %16 = lw %15
    %17 = li 1
    %18 = sub %16, %17
    %19 = cmp.lt %12, %18
    bz %19, L3
    call std.string.String#init<void>(%20)
    %21 = li ""
    call std.string.String#add<char*>(%20, %21)
    %22 = ld %1
    %23 = li 4
    %24 = add %22, %23
    %25 = lw %4
    %26 = li 4
    %27 = mul %25, %26
    %28 = add %24, %27
    %29 = lw %28
    call std.string.String#add<int>(%20, %29)
    %30 = li ", "
    call std.string.String#add<char*>(%20, %30)
    %31 = call std.string.String#c_str<void>(%20)
    call std.io.print<char*>(%31)
    call std.string.String#destroy<void>(%20)
    %32 = lw %4
    %33 = li 1
    %34 = add %32, %33
    sw %4, %34
    goto L2
    
L3:
    call std.string.String#init<void>(%35)
    %36 = li ""
    call std.string.String#add<char*>(%35, %36)
    %37 = ld %1
    %38 = li 4
    %39 = add %37, %38
    %40 = lw %4
    %41 = li 4
    %42 = mul %40, %41
    %43 = add %39, %42
    %44 = lw %43
    call std.string.String#add<int>(%35, %44)
    %45 = li ""
    call std.string.String#add<char*>(%35, %45)
    %46 = call std.string.String#c_str<void>(%35)
    call std.io.print<char*>(%46)
    call std.string.String#destroy<void>(%35)
    goto L1
    
L0:
    
L1:
    %47 = li '}'
    call std.io.print<char>(%47)
    return

def main.Vector#println<void>(%0):
    %1 = alloca this, 8, 8
    sd %1, %0
    %2 = ld %1
    call main.Vector#print<void>(%2)
    %3 = li '\n'
    call std.io.print<char>(%3)
    return

def main.Vector#pop<void>(%0):
    %1 = alloca this, 8, 8
    sd %1, %0
    %2 = ld %1
    %3 = li 0
    %4 = add %2, %3
    %5 = lw %4
    %6 = li 1
    %7 = sub %5, %6
    %8 = ld %1
    %9 = li 0
    %10 = add %8, %9
    sw %10, %7
    return

def main.Vector#add_front<int>(%0, %1):
    %1 = alloca this, 8, 8
    %3 = alloca p0_n, 4, 4
    %14 = alloca v0_i, 4, 4
    sd %1, %0
    sw %3, %2
    %4 = ld %1
    %5 = li 0
    %6 = add %4, %5
    %7 = lw %6
    %8 = li 254
    %9 = cmp.lt %7, %8
    bz %9, L0
    %10 = ld %1
    %11 = li 0
    %12 = add %10, %11
    %13 = lw %12
    sw %14, %13
    
L2:
    %15 = lw %14
    %16 = li 0
    %17 = cmp.gt %15, %16
    bz %17, L3
    %18 = ld %1
    %19 = li 4
    %20 = add %18, %19
    %21 = lw %14
    %22 = li 1
    %23 = sub %21, %22
    %24 = li 4
    %25 = mul %23, %24
    %26 = add %20, %25
    %27 = lw %26
    %28 = ld %1
    %29 = li 4
    %30 = add %28, %29
    %31 = lw %14
    %32 = li 4
    %33 = mul %31, %32
    %34 = add %30, %33
    sw %34, %27
    %35 = lw %14
    %36 = li 1
    %37 = sub %35, %36
    sw %14, %37
    goto L2
    
L3:
    goto L1
    
L0:
    
L1:
    %38 = lw %3
    %39 = ld %1
    %40 = li 4
    %41 = add %39, %40
    %42 = li 0
    %43 = li 4
    %44 = mul %42, %43
    %45 = add %41, %44
    sw %45, %38
    %46 = ld %1
    %47 = li 0
    %48 = add %46, %47
    %49 = lw %48
    %50 = li 1
    %51 = add %49, %50
    sw %48, %51
    return

def main.Vector#replace<int, int>(%0, %1, %2):
    %1 = alloca this, 8, 8
    %3 = alloca p0_idx, 4, 4
    %5 = alloca p1_n, 4, 4
    sd %1, %0
    sw %3, %2
    sw %5, %4
    %6 = lw %5
    %7 = ld %1
    %8 = li 4
    %9 = add %7, %8
    %10 = lw %3
    %11 = li 4
    %12 = mul %10, %11
    %13 = add %9, %12
    sw %13, %6
    return

def main.Vector#destroy<void>(%0):
    %1 = alloca this, 8, 8
    sd %1, %0
    return

def std.io.print<char>(%0):
    %1 = alloca p0_c, 1, 1
    %2 = alloca v0_ptr, 8, 8
    sb %1, %0
    sd %2, %1
    %3 = li 0x11
    sd %2, %3
    %4 = lb %1
    %5 = ld %2
    sb %5, %4
    return

def std.io.print<int>(%0):
    %1 = alloca p0_n, 4, 4
    %2 = alloca v0_p, 8, 8
    sw %1, %0
    sd %2, %1
    %3 = li 0x10
    sd %2, %3
    %4 = lw %1
    %5 = ld %2
    sw %5, %4
    return

def std.io.print<u8>(%0):
    %1 = alloca p0_n, 1, 1
    %5 = alloca v0_k, 4, 4
    %6 = alloca v1_p, 8, 8
    sb %1, %0
    %2 = lb %1
    %3 = li 0x0ff
    %0 = unknown %0, %0
    sw %5, %4
    sd %6, %5
    %7 = li 0x10
    sd %6, %7
    %8 = lw %5
    %9 = ld %6
    sw %9, %8
    return

def std.io.print<char*>(%0):
    %1 = alloca p0_s, 8, 8
    sd %1, %0
    
L0:
    %2 = ld %1
    %3 = lb %2
    %4 = li '\0'
    %5 = cmp.ne %3, %4
    bz %5, L1
    %6 = ld %1
    %7 = lb %6
    call std.io.print<char>(%7)
    %8 = ld %1
    %9 = li 1
    %10 = add %8, %9
    sd %1, %10
    goto L0
    
L1:
    return

def std.io.print_bin<int>(%0):
    %1 = alloca p0_n, 4, 4
    %4 = alloca v0_i, 4, 4
    sw %1, %0
    %2 = li "0b"
    call std.io.print<char*>(%2)
    %3 = li 31
    sw %4, %3
    
L0:
    %5 = lw %4
    %6 = li 0
    %7 = cmp.ge %5, %6
    bz %7, L1
    %8 = lw %1
    %9 = li 1
    %10 = lw %4
    %0 = unknown %0, %0
    %0 = unknown %0, %0
    bz %12, L2
    %13 = li '1'
    call std.io.print<char>(%13)
    goto L3
    
L2:
    %14 = li '0'
    call std.io.print<char>(%14)
    
L3:
    %15 = lw %4
    %16 = li 1
    %17 = sub %15, %16
    sw %4, %17
    goto L0
    
L1:
    return

def std.io.print_hex<int>(%0):
    %1 = alloca p0_n, 4, 4
    %3 = alloca v0_c, 1, 1
    %6 = alloca v1_i, 4, 4
    %15 = alloca v2_v, 4, 4
    sw %1, %0
    %2 = li '0'
    sb %3, %2
    %4 = li "0x"
    call std.io.print<char*>(%4)
    %5 = li 28
    sw %6, %5
    
L0:
    %7 = lw %6
    %8 = li 0
    %9 = cmp.ge %7, %8
    bz %9, L1
    %10 = lw %1
    %11 = lw %6
    %0 = unknown %0, %0
    %13 = li 0xf
    %0 = unknown %0, %0
    sw %15, %14
    %16 = lw %15
    %17 = li 10
    %18 = cmp.lt %16, %17
    bz %18, L2
    %19 = li '0'
    %20 = lw %15
    %21 = add %19, %20
    sb %3, %21
    goto L3
    
L2:
    %22 = li 'a'
    %23 = lw %15
    %24 = add %22, %23
    %25 = li 10
    %26 = sub %24, %25
    sb %3, %26
    
L3:
    %27 = lb %3
    call std.io.print<char>(%27)
    %28 = lw %6
    %29 = li 4
    %30 = sub %28, %29
    sw %6, %30
    goto L0
    
L1:
    return

def std.io.println<char>(%0):
    %1 = alloca p0_c, 1, 1
    sb %1, %0
    %2 = lb %1
    call std.io.print<char>(%2)
    %3 = li '\n'
    call std.io.print<char>(%3)
    return

def std.io.println<u8>(%0):
    %1 = alloca p0_n, 1, 1
    sb %1, %0
    %2 = lb %1
    call std.io.print<u8>(%2)
    %3 = li '\n'
    call std.io.print<char>(%3)
    return

def std.io.println<int>(%0):
    %1 = alloca p0_n, 4, 4
    sw %1, %0
    %2 = lw %1
    call std.io.print<int>(%2)
    %3 = li '\n'
    call std.io.print<char>(%3)
    return

def std.io.println<char*>(%0):
    %1 = alloca p0_s, 8, 8
    sd %1, %0
    %2 = ld %1
    call std.io.print<char*>(%2)
    %3 = li '\n'
    call std.io.print<char>(%3)
    return

def std.io.println_bin<int>(%0):
    %1 = alloca p0_n, 4, 4
    sw %1, %0
    %2 = lw %1
    call std.io.print_bin<int>(%2)
    %3 = li '\n'
    call std.io.print<char>(%3)
    return

def std.io.println_hex<int>(%0):
    %1 = alloca p0_n, 4, 4
    sw %1, %0
    %2 = lw %1
    call std.io.print_hex<int>(%2)
    %3 = li '\n'
    call std.io.print<char>(%3)
    return

def std.io.read_int<void>():
    %1 = alloca v0_v, 4, 4
    %2 = alloca v1_ptr, 8, 8
    %0 = li 0
    sw %1, %0
    sd %2, %1
    %3 = li 0x10
    sd %2, %3
    %4 = ld %2
    %5 = lw %4
    return %5
    return

def std.io.read_int<char*>(%0):
    %1 = alloca p0_msg, 8, 8
    sd %1, %0
    %2 = ld %1
    call std.io.print<char*>(%2)
    %3 = call std.io.read_int<void>()
    return %3
    return

def std.io.memcpy<void*, void*, int>(%0, %1, %2):
    %1 = alloca p0_dest, 8, 8
    %3 = alloca p1_src, 8, 8
    %5 = alloca p2_n, 4, 4
    %7 = alloca v0_p2, 8, 8
    %9 = alloca v1_p1, 8, 8
    %11 = alloca v2_i, 4, 4
    sd %1, %0
    sd %3, %2
    sw %5, %4
    %6 = ld %1
    sd %7, %6
    %8 = ld %3
    sd %9, %8
    %10 = li 0
    sw %11, %10
    
L0:
    %12 = lw %11
    %13 = lw %5
    %14 = cmp.lt %12, %13
    bz %14, L1
    %15 = ld %9
    %16 = lb %15
    %17 = ld %7
    sb %17, %16
    %18 = ld %9
    %19 = li 1
    %20 = add %18, %19
    sd %9, %20
    %21 = ld %7
    %22 = li 1
    %23 = add %21, %22
    sd %7, %23
    %24 = lw %11
    %25 = li 1
    %26 = add %24, %25
    sw %11, %26
    goto L0
    
L1:
    return

def std.string.String#init<void>(%0):
    %1 = alloca this, 8, 8
    sd %1, %0
    %2 = li 0
    %3 = ld %1
    %4 = li 256
    %5 = add %3, %4
    sw %5, %2
    %6 = li '\0'
    %7 = ld %1
    %8 = li 0
    %9 = add %7, %8
    %10 = li 0
    %11 = li 1
    %12 = mul %10, %11
    %13 = add %9, %12
    sb %13, %6
    return

def std.string.String#add<int>(%0, %1):
    %1 = alloca this, 8, 8
    %3 = alloca p0_n, 4, 4
    %5 = alloca v0_i, 4, 4
    %7 = alloca v1_flag, 1, 1
    %12 = alloca v2_initt, 4, 4
    %57 = alloca v3_m, 4, 4
    sd %1, %0
    sw %3, %2
    %4 = li 0
    sw %5, %4
    %6 = li false
    sb %7, %6
    %8 = ld %1
    %9 = li 256
    %10 = add %8, %9
    %11 = lw %10
    sw %12, %11
    %13 = lw %3
    %14 = li 0
    %15 = cmp.eq %13, %14
    bz %15, L0
    %16 = li '0'
    %17 = ld %1
    %18 = li 0
    %19 = add %17, %18
    %20 = ld %1
    %21 = li 256
    %22 = add %20, %21
    %23 = lw %22
    %24 = li 1
    %25 = mul %23, %24
    %26 = add %19, %25
    sb %26, %16
    %27 = ld %1
    %28 = li 256
    %29 = add %27, %28
    %30 = lw %29
    %31 = li 1
    %32 = add %30, %31
    sw %29, %32
    %33 = li '\0'
    %34 = ld %1
    %35 = li 0
    %36 = add %34, %35
    %37 = ld %1
    %38 = li 256
    %39 = add %37, %38
    %40 = lw %39
    %41 = li 1
    %42 = mul %40, %41
    %43 = add %36, %42
    sb %43, %33
    goto L1
    
L0:
    %44 = lw %3
    %45 = li 0
    %46 = cmp.lt %44, %45
    bz %46, L2
    %47 = li 0
    %48 = lw %3
    %49 = sub %47, %48
    sw %3, %49
    %50 = li true
    sb %7, %50
    goto L3
    
L2:
    
L3:
    
L4:
    %51 = lw %3
    %52 = li 0
    %53 = cmp.gt %51, %52
    bz %53, L5
    %54 = lw %3
    %55 = li 10
    %56 = rem %54, %55
    sw %57, %56
    %58 = li '0'
    %59 = lw %57
    %60 = add %58, %59
    %61 = ld %1
    %62 = li 0
    %63 = add %61, %62
    %64 = ld %1
    %65 = li 256
    %66 = add %64, %65
    %67 = lw %66
    %68 = li 1
    %69 = mul %67, %68
    %70 = add %63, %69
    sb %70, %60
    %71 = ld %1
    %72 = li 256
    %73 = add %71, %72
    %74 = lw %73
    %75 = li 1
    %76 = add %74, %75
    %77 = ld %1
    %78 = li 256
    %79 = add %77, %78
    sw %79, %76
    %80 = lw %3
    %81 = li 10
    %82 = div %80, %81
    sw %3, %82
    goto L4
    
L5:
    %83 = lb %7
    bz %83, L6
    %84 = li '-'
    %85 = ld %1
    %86 = li 0
    %87 = add %85, %86
    %88 = ld %1
    %89 = li 256
    %90 = add %88, %89
    %91 = lw %90
    %92 = li 1
    %93 = mul %91, %92
    %94 = add %87, %93
    sb %94, %84
    %95 = ld %1
    %96 = li 256
    %97 = add %95, %96
    %98 = lw %97
    %99 = li 1
    %100 = add %98, %99
    %101 = ld %1
    %102 = li 256
    %103 = add %101, %102
    sw %103, %100
    goto L7
    
L6:
    
L7:
    %104 = li '\0'
    %105 = ld %1
    %106 = li 0
    %107 = add %105, %106
    %108 = ld %1
    %109 = li 256
    %110 = add %108, %109
    %111 = lw %110
    %112 = li 1
    %113 = mul %111, %112
    %114 = add %107, %113
    sb %114, %104
    %115 = ld %1
    %116 = li 0
    %117 = add %115, %116
    %118 = lw %12
    %119 = li 1
    %120 = mul %118, %119
    %121 = add %117, %120
    call std.cstring.strrev<char*>(%121)
    
L1:
    return

def std.string.String#c_str<void>(%0):
    %1 = alloca this, 8, 8
    sd %1, %0
    %2 = ld %1
    %3 = li 0
    %4 = add %2, %3
    %5 = li 0
    %6 = li 1
    %7 = mul %5, %6
    %8 = add %4, %7
    return %8
    return

def std.string.String#add<char*>(%0, %1):
    %1 = alloca this, 8, 8
    %3 = alloca p0_s, 8, 8
    sd %1, %0
    sd %3, %2
    
L0:
    %4 = ld %3
    %5 = lb %4
    %6 = li '\0'
    %7 = cmp.ne %5, %6
    bz %7, L1
    %8 = ld %3
    %9 = lb %8
    %10 = ld %1
    %11 = li 0
    %12 = add %10, %11
    %13 = ld %1
    %14 = li 256
    %15 = add %13, %14
    %16 = lw %15
    %17 = li 1
    %18 = mul %16, %17
    %19 = add %12, %18
    sb %19, %9
    %20 = ld %1
    %21 = li 256
    %22 = add %20, %21
    %23 = lw %22
    %24 = li 1
    %25 = add %23, %24
    sw %22, %25
    %26 = ld %3
    %27 = li 1
    %28 = add %26, %27
    sd %3, %28
    goto L0
    
L1:
    return

def std.string.String#destroy<void>(%0):
    %1 = alloca this, 8, 8
    sd %1, %0
    return

def std.cstring.strlen<char*>(%0):
    %1 = alloca p0_buffer, 8, 8
    %3 = alloca v0_i, 4, 4
    sd %1, %0
    %2 = li 0
    sw %3, %2
    
L0:
    %4 = ld %1
    %5 = lb %4
    %6 = li '\0'
    %7 = cmp.ne %5, %6
    bz %7, L1
    %8 = ld %1
    %9 = li 1
    %10 = add %8, %9
    sd %1, %10
    %11 = lw %3
    %12 = li 1
    %13 = add %11, %12
    sw %3, %13
    goto L0
    
L1:
    %14 = lw %3
    return %14
    return

def std.cstring.strcpy<char*, char*>(%0, %1):
    %1 = alloca p0_dest, 8, 8
    %3 = alloca p1_src, 8, 8
    sd %1, %0
    sd %3, %2
    
L0:
    %4 = ld %3
    %5 = lb %4
    %6 = li '\0'
    %7 = cmp.ne %5, %6
    bz %7, L1
    %8 = ld %3
    %9 = lb %8
    %10 = ld %1
    sb %10, %9
    %11 = ld %1
    %12 = li 1
    %13 = add %11, %12
    sd %1, %13
    %14 = ld %3
    %15 = li 1
    %16 = add %14, %15
    sd %3, %16
    goto L0
    
L1:
    %17 = li '\0'
    %18 = ld %1
    sb %18, %17
    return

def std.cstring.strrev<char*>(%0):
    %1 = alloca p0_buffer, 8, 8
    %4 = alloca v0_len, 4, 4
    %6 = alloca v1_i, 4, 4
    %16 = alloca v2_temp, 1, 1
    sd %1, %0
    %2 = ld %1
    %3 = call std.cstring.strlen<char*>(%2)
    sw %4, %3
    %5 = li 0
    sw %6, %5
    
L0:
    %7 = lw %6
    %8 = lw %4
    %9 = li 2
    %10 = div %8, %9
    %11 = cmp.lt %7, %10
    bz %11, L1
    %12 = ld %1
    %13 = lw %6
    %14 = add %12, %13
    %15 = lb %14
    sb %16, %15
    %17 = ld %1
    %18 = lw %4
    %19 = add %17, %18
    %20 = lw %6
    %21 = sub %19, %20
    %22 = li 1
    %23 = sub %21, %22
    %24 = lb %23
    %25 = ld %1
    %26 = lw %6
    %27 = add %25, %26
    sb %27, %24
    %28 = lb %16
    %29 = ld %1
    %30 = lw %4
    %31 = add %29, %30
    %32 = lw %6
    %33 = sub %31, %32
    %34 = li 1
    %35 = sub %33, %34
    sb %35, %28
    %36 = lw %6
    %37 = li 1
    %38 = add %36, %37
    sw %6, %38
    goto L0
    
L1:
    return

def std.cstring.strdup<char*>(%0):
    %1 = alloca p0_buffer, 8, 8
    %4 = alloca v0_len, 4, 4
    %5 = alloca v1_copy, 8, 8
    %7 = alloca v2_i, 4, 4
    sd %1, %0
    %2 = ld %1
    %3 = call std.cstring.strlen<char*>(%2)
    sw %4, %3
    sd %5, %4
    %6 = li 0
    sw %7, %6
    
L0:
    %8 = lw %7
    %9 = lw %4
    %10 = li 1
    %11 = add %9, %10
    %12 = cmp.lt %8, %11
    bz %12, L1
    %13 = ld %1
    %14 = lw %7
    %15 = li 1
    %16 = mul %14, %15
    %17 = add %13, %16
    %18 = lb %17
    %19 = ld %5
    %20 = lw %7
    %21 = li 1
    %22 = mul %20, %21
    %23 = add %19, %22
    sb %23, %18
    %24 = lw %7
    %25 = li 1
    %26 = add %24, %25
    sw %7, %26
    goto L0
    
L1:
    %27 = ld %5
    return %27
    return


{2, 3, 7}
{2, 3}
{77, 2,  3,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9}
{100, 2, , 3, , 0, , 1, , 2, , 3, , 4, , 5, , 6, , 7, , 8, , 9}
